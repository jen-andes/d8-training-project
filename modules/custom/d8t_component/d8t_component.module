<?php
/**
 * @file
 * Contains d8t_component.module..
 */

use Drupal\file\Entity\File;
use Drupal\node\Entity\Node;

/**
* Implements hook_preprocess_entity().
*/
function d8t_component_preprocess_paragraph(&$variables) {
  $paragraph = $variables['paragraph'];
  $paragraph_type = $paragraph->getType();
  $content = $variables['content'];

  // Menu.
  if ($paragraph_type == 'menu') {
    $items = _d8t_component_paragraph_menu_content();
    $variables['content']['menus'] = $items['menus'];
    $variables['content']['categories'] = $items['categories'];
  }

  // Upcoming Event.
  if ($paragraph_type == 'upcoming_event') {
    $max_num = $content['field_max_num'][0]['#markup'];
    $items = _d8t_component_paragraph_event_content($max_num);
    $variables['content']['events'] = $items;
  }
}

/**
* Helper function to get list of menus.
*/
function _d8t_component_paragraph_menu_content() {
  $vid = 'menu_category';
  $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
  $categories = [];
  foreach ($terms as $key => $term) {
    $categories[] = [
      'id' => 'term' . $term->tid,
      'name' => $term->name,
    ];
  }

  $query = \Drupal::entityQuery('node');
  $nids = $query->condition('type', 'product')
    ->condition('status', 1)
    ->sort('created', 'DESC')
    ->range(0, 8)
    ->execute();
  $nodes = Node::loadMultiple($nids);

  $menus['#items'] = [];
  foreach ($nodes as $key => $node) {
    if ($node->get('field_menu_category')->isEmpty()) {
      continue;
    }
    $view_builder = \Drupal::entityManager()->getViewBuilder('node');
    $menus['#items'][] = $view_builder->view($node, 'teaser');
  }
      
  return [
    'categories' => $categories,
    'menus' => $menus,
  ];
}

/**
* Helper function to get list of event.
*/
function _d8t_component_paragraph_event_content($max_num) {
  $query = \Drupal::entityQuery('node');
  $nids = $query->condition('type', 'event')
    ->condition('status', 1)
    ->sort('field_timestamp', 'DESC')
    ->range(0, $max_num)
    ->execute();
  $nodes = Node::loadMultiple($nids);

  $events['#items'] = [];
  foreach ($nodes as $key => $node) {
    $view_builder = \Drupal::entityManager()->getViewBuilder('node');
    $events['#items'][] = $view_builder->view($node, 'featured');
  }

  return $events;
}

